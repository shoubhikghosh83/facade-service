# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build project with Maven
        run: mvn -B package --file pom.xml
      - uses: Azure/docker-login@v1
        with:
          login-server: crgshtest.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
          docker build . -t crgshtest.azurecr.io/facade-service:latest
          docker push crgshtest.azurecr.io/facade-service:latest
      #- uses: azure/login@v1
        #with:
          #client-id: ${{ secrets.AZURE_CLIENT_ID }}
          #tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          #subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: aksshtest
          resource-group: rg-sh-test
      - uses: Azure/k8s-create-secret@v1
        with:
          container-registry-url: cloudlifeacr.azurecr.io
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: k8s-secret
      - uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            deploy/deployment.yaml
            deploy/service.yaml
            deploy/ingress.yaml
          images: |
            crgshtest.azurecr.io/facade-service:latest
          imagepullsecrets: |
            k8s-secret
